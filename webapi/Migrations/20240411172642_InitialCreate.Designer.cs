// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20240411172642_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ImageDataset", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UID"));

                    b.Property<string>("AuthorUID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("ImageNames")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool>("IsAuthorGuest")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UID");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("RankingChoice", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UID"));

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("choice")
                        .HasColumnType("integer");

                    b.Property<int>("datasetKey")
                        .HasColumnType("integer");

                    b.Property<int>("promptLeftIndex")
                        .HasColumnType("integer");

                    b.Property<int>("promptRightIndex")
                        .HasColumnType("integer");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UID");

                    b.ToTable("RankingChoices");
                });

            modelBuilder.Entity("webapi.GuestUser", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int[]>("OwnedDatasets")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("UID");

                    b.ToTable("GuestUsers");
                });

            modelBuilder.Entity("webapi.PermanentUser", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UID");

                    b.ToTable("PermanentUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
